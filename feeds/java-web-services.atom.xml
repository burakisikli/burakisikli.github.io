<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title></title><link href="http://www.burakisikli.com/" rel="alternate"></link><link href="http://www.burakisikli.com/feeds/java-web-services.atom.xml" rel="self"></link><id>http://www.burakisikli.com/</id><updated>2009-07-29T02:06:00+03:00</updated><entry><title>Web Service ile Sıcaklık Dönüşümü</title><link href="http://www.burakisikli.com/web-service-ile-sicaklik-donusumu.html" rel="alternate"></link><published>2009-07-29T02:06:00+03:00</published><author><name>burakisikli</name></author><id>tag:www.burakisikli.com,2009-07-29:web-service-ile-sicaklik-donusumu.html</id><summary type="html">&lt;p&gt;Daha önceden blogumdaki &lt;a href="post.php?action=edit&amp;amp;post=162" title="Edit “Axis 2 Kullanılarak Web Servis Oluşturma”"&gt;Axis 2 Kullanılarak Web
Servis Oluşturma&lt;/a&gt;
adlı yazımda web servisin nasıl oluşturulacağını anlatmıştım. Fakat çok
iyi bir örnek vermediğim için biraz havada kaldı. Şimdi anlatacağım
örnekle konu tam anlamıyla oturmuş olacak. Web servislerde internette
biraz araştırma yaparsanız en sık öne çıkan örnekler sıcaklık dönüşümü,
para dönüşümü, kimlik sorgulama gibi hizmetler olacaktır. Bende
bunlardan biri olan sıcaklık dönüşümünü java ve jsp kullanarak
anlatacağım.&lt;/p&gt;
&lt;p&gt;Yapacağımız programı iki aşamalı olarak anlatacağım. Birinci
versiyonumuz için paket adımız
“edu.burakkk.webservice.tempConverter.v1”. İlk önce birinci versiyonu
yapalım.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TempConverter.java&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[sourcecode language="java"]&lt;/p&gt;
&lt;p&gt;package edu.burakkk.webservice.tempConverter.v1;&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
* Web Service&lt;br /&gt;
* Temp Converter&lt;br /&gt;
*&lt;br /&gt;
*@version 1.0 Release 1&lt;br /&gt;
*@author burakkk&lt;br /&gt;
*&lt;br /&gt;
**/&lt;/p&gt;
&lt;p&gt;public class TempConverter{&lt;br /&gt;
public String FahrenheitToCelsius(String Input) {&lt;br /&gt;
if (!Input.isEmpty() &amp;amp;&amp;amp; isNumber(Input)) {&lt;br /&gt;
double result = 0;&lt;br /&gt;
result = Double.parseDouble(Input);&lt;br /&gt;
result = (((result) - 32) / 9) * 5;&lt;br /&gt;
Input = Double.toString(result);&lt;br /&gt;
return Input;&lt;br /&gt;
} else {&lt;br /&gt;
return "ERROR! Please enter the input number...";&lt;br /&gt;
}&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;public String CelsiusToFahrenheit(String Input) {&lt;br /&gt;
if (!Input.isEmpty() &amp;amp;&amp;amp; isNumber(Input)) {&lt;br /&gt;
double result = 0;&lt;br /&gt;
result = Double.parseDouble(Input);&lt;br /&gt;
result = (((result) * 9) / 5) + 32;&lt;br /&gt;
Input = Double.toString(result);&lt;br /&gt;
return Input;&lt;br /&gt;
} else {&lt;br /&gt;
return "ERROR! Please enter the input number...";&lt;br /&gt;
}&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;private boolean isNumber(String num) {&lt;br /&gt;
try {&lt;br /&gt;
Double.parseDouble(num);&lt;br /&gt;
} catch (NumberFormatException nfe) {&lt;br /&gt;
return false;&lt;br /&gt;
}&lt;br /&gt;
return true;&lt;br /&gt;
}&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;[/sourcecode]&lt;/p&gt;
&lt;p&gt;Aslında yaptığımız programı bu şekilde kullanmak doğru olmaz. Çünkü her
metodu çağırmak için ayrı bir fçıktır. İşte bu işlemi bu şekilde iki
ayrı metoda bölerek rahatlıkla yapabiliriz. Özel olan metoda önce
kullanıcı üye mi değil mi diye üyelik testi yaptırırız. Bu sebeple de
sınıfımıza private olan ayrı bir metod daha ekleriz. Bu private metod,
gelen kullanıcının üye olup olmadığını kontrol eder. Örneğin boolean
türünde olursa true sonuç döndürürse istediğimiz webservisin sonucunu
döndürürüz aksi takdirde üye olmadığına dair hata sonucunu döndürürüz.&lt;/p&gt;
&lt;p&gt;Bu prosesimizi(web servisimizi) kullanacağımız zaman yani çağırmak için
olan prosesimizi yapalım. Aslında bunu bir web sayfası olarak JSP ile
yapacağız. Ancak daha öncedende anlattığım gibi web servis genel bir
konsept olduğu için her programlama dilinde yapmak mümkündür. Ben sadece
örnek olarak JSP kullanacağım.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TempConverter.v1.jsp&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
\[sourcecode language="html"\]









&lt;/p&gt;

&lt;p&gt;&lt;form&lt;br&gt;&lt;/form&lt;br&gt;
action='http://localhost:8080/WebService/services/TempConverter/FahrenheitToCelsius'&lt;br /&gt;
method="post" target="_blank"&amp;gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Fahrenheit to Celsius:   &lt;input type="text" size="30" name="Input"&gt;
                           &lt;input type="submit" value="Convert"&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;/form&gt;
&lt;form&lt;br&gt;&lt;/form&lt;br&gt;
action='http://localhost:8080/WebService/services/TempConverter/CelsiusToFahrenheit'&lt;br /&gt;
method="post" target="_blank"&amp;gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Celsius to Fahrenheit:   &lt;input type="text" size="30" name="Input"&gt;
                           &lt;input type="submit" value="Convert"&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;/form&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;[/sourcecode]&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;strong&gt;Ekran Görüntüsü:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Result" class="aligncenter
.size-full wp-image-203" height="166" src="http://burakisikli.files.wordpress.com/2009/07/11.jpg" title="Result" width="380" /&gt;&lt;/p&gt;
&lt;p&gt;Sayfamızı çalıştırdığımızda yukarıdaki gibi bir ekran karşımıza
gelecektir. Buraya fahrenheit olarak veya celcius olarak çevirmek
istediğimiz rakamı girip convert butonuna bastığımızda karşımıza sonuç
gelecektir. Ancak web servis bir xml tabanlı olduğu için sonucumuz da
xml formatında gelecektir.&lt;/p&gt;
&lt;p&gt;Programımızın ikinci aşamasına gelelim. İkinci programımızın paket adı
“edu.burakkk.webservice.tempConverter.v2”dır. Web servisimizi yaratalım.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TempConverter.java&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[sourcecode language="java"]&lt;/p&gt;
&lt;p&gt;package edu.burakkk.webservice.tempConverter.v2;&lt;/p&gt;
&lt;p&gt;/**&lt;br /&gt;
* Web Service&lt;br /&gt;
* Temp Converter&lt;br /&gt;
*&lt;br /&gt;
*@version 1.1 Release 1&lt;br /&gt;
*@author Burak ISIKLI&lt;br /&gt;
*&lt;br /&gt;
**/&lt;/p&gt;
&lt;p&gt;public class TempConverter {&lt;br /&gt;
public String Convert(String type, String Input) {&lt;br /&gt;
if (Input.isEmpty() || !isNumber(Input)) {&lt;br /&gt;
return "ERROR! Please enter the input number...";&lt;br /&gt;
}&lt;br /&gt;
// Fahrenheit To Celsius&lt;br /&gt;
if (type.equals("F")) {&lt;br /&gt;
double result = 0;&lt;br /&gt;
result = Double.parseDouble(Input);&lt;br /&gt;
result = (((result) - 32) / 9) * 5;&lt;br /&gt;
Input = Double.toString(result);&lt;br /&gt;
return Input;&lt;br /&gt;
}&lt;br /&gt;
// Celsius To Fahrenheit&lt;br /&gt;
else if (type.equals("C")) {&lt;br /&gt;
double result = 0;&lt;br /&gt;
result = Double.parseDouble(Input);&lt;br /&gt;
result = (((result) * 9) / 5) + 32;&lt;br /&gt;
Input = Double.toString(result);&lt;br /&gt;
return Input;&lt;br /&gt;
}&lt;br /&gt;
return "ERROR! Please enter the input number...";&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;private boolean isNumber(String num) {&lt;br /&gt;
try {&lt;br /&gt;
Double.parseDouble(num);&lt;br /&gt;
} catch (NumberFormatException nfe) {&lt;br /&gt;
return false;&lt;br /&gt;
}&lt;br /&gt;
return true;&lt;br /&gt;
}&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;[/sourcecode]&lt;/p&gt;
&lt;p&gt;Bu prosesimiz bir öncekinden biraz daha farklı oldu. Bu prosesimizde tek
fonksiyonda olayı çözdük. Ancak fahrenheit mı celcius mu olduğunu kısaca
hangi tür olduğunu kullancıdan başkan bir değişken isteyerek yaptık. Bu
istediğimiz değişkeni formda belirleyerek programa derdimizi anlattık.
Böylelikle tek hamlede istediğimiz web servisi yapmış olduk. Aslında
benim yaptığım hata döndürme olaylarını da web tarafında yapmak daha
doğru olur. Basit bir örnek vermek istediğim için detaylı incelemedim.
Formda javascriptle gerekli eklemeler yapılarak hatta ajax kullanılarak
çok daha kullanışlı bir sayfa yapmak mümkün olabilir.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TempConverter.v1.1.jsp&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
\[sourcecode language="html"\]









&lt;/p&gt;

&lt;p&gt;&lt;form&lt;br&gt;&lt;/form&lt;br&gt;
action='http://localhost:8080/WebService/services/TempConverter/Convert'&lt;br /&gt;
method="post"&amp;gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Enter the input number: &lt;input type="text" size="30" name="Input"&gt;&lt;/p&gt;
&lt;p&gt;&lt;input type="radio" name="type" value="F"&gt;&lt;/input&gt; Fahrenheit&lt;br /&gt;
 &lt;input type="radio" name="type" value="C" checked&gt;&lt;/input&gt; Celsius&lt;/p&gt;
&lt;p&gt;&lt;input type="submit" value="Convert" &lt;br&gt;&lt;/input&gt; class="button"&amp;gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;/form&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;[/sourcecode]&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;strong&gt;Ekran Görüntüsü:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="Result-2" class="aligncenter
.size-full wp-image-204" height="166" src="http://burakisikli.files.wordpress.com/2009/07/12.jpg" title="Result-2" width="380" /&gt;&lt;/strong&gt;45 Celcius’u
Fahrenheit’e çevirmek istediğimizde karşımıza gelen ekran şu şekilde
olacaktır.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ekran Görüntüsü:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="Result-3" class="aligncenter
.size-full wp-image-205" height="66" src="http://burakisikli.files.wordpress.com/2009/07/13.jpg" title="Result-3" width="643" /&gt;&lt;br /&gt;
&lt;/strong&gt;&lt;/p&gt;</summary><category term="Axis"></category><category term="Axis 2"></category><category term="Örnek"></category><category term="Converter"></category><category term="Dönüşümü"></category><category term="Eclipse"></category><category term="Example"></category><category term="Service"></category><category term="Servis"></category><category term="SOA"></category><category term="SOAP"></category><category term="Sıcaklık"></category><category term="Temperature"></category><category term="Web"></category><category term="Web Service"></category><category term="Web Servis"></category><category term="WSDL"></category></entry><entry><title>Axis 2 Kullanılarak Web Servis Oluşturma</title><link href="http://www.burakisikli.com/axis-2-kullanilarak-web-servis-olusturma.html" rel="alternate"></link><published>2009-07-14T02:12:00+03:00</published><author><name>burakisikli</name></author><id>tag:www.burakisikli.com,2009-07-14:axis-2-kullanilarak-web-servis-olusturma.html</id><summary type="html">&lt;p&gt;“Web servis nedir” yazımda web servisin ne olduğunu nerelerde ne amaçla
kullandığını anlatmaya çalıştım ancak örnek vermeyince konu biraz havada
kaldı. Bu nedenle eğer web servis nedir bilmiyorsanız önce &lt;a href="../2009/07/04/web-servicesweb-servis-nedir/"&gt;bu
yazımı&lt;/a&gt; okumanızı öneririm.&lt;/p&gt;
&lt;p&gt;Örnek olarak Axis 2’yi kullanarak web servis oluşturup buna bağlanarak
gerekli bilgiyi alacağız.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gerekenler:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Java&lt;/li&gt;
&lt;li&gt;Axis 2 Version 1.4&lt;/li&gt;
&lt;li&gt;Eclipse&lt;/li&gt;
&lt;li&gt;Tomcat&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Örneğimize geçmeden önce axis nedir onu anlamalıyız.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Axis 2:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Axis 2, web servisler için oluşturulmuş çekirdek makinadır(core engine).
Bize SOAP kullanılarak dizayn ve yazma sağlayan apache tarafından
geliştirilmiş proje diyebiliriz. Java ve C programlama dillerini
desteklemektedir. Ayrıca
&lt;a href="http://en.wikipedia.org/wiki/REST" title="REST"&gt;REST&lt;/a&gt; ve &lt;a href="http://en.wikipedia.org/wiki/Spring_Framework" title="Spring Framework"&gt;Spring
Framework&lt;/a&gt;
desteği de mevcuttur.&lt;/p&gt;
&lt;p&gt;Axis 2 bazı özellikleri şunlardır:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Yeni XML işleme(process) çekirdeği modeli, AXIOM (&lt;strong&gt;AXI&lt;/strong&gt;s
    &lt;strong&gt;O&lt;/strong&gt;bject &lt;strong&gt;M&lt;/strong&gt;odel)&lt;/li&gt;
&lt;li&gt;A blocking ve non-blocking istemci API (application
    programming interface)&lt;/li&gt;
&lt;li&gt;WS-Addressing desteği&lt;/li&gt;
&lt;li&gt;HTTP (Hypertext Transfer Protocol), SMTP (Simple Mail Transfer
    Protocol), ve TCP (Transmission Control Protocol) iletişimi için
    destek&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Axis 2 Mimarisi:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="axis2" class="aligncenter
.size-full wp-image-172" height="454" src="http://burakisikli.files.wordpress.com/2009/07/axis2.gif" title="axis2" width="562" /&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Kısaca bir SOAP uygulama çatısı olduğunu gördük. Tomcat gibi servlet
motorlarına eklenebilir. Bizim tarifimizde kullanacagımız bölüm WSDL’den
Java sınıfları üreten kısım olacak. Daha detaylı bilgi için lütfen
&lt;a href="http://ws.apache.org/axis2/"&gt;burayı&lt;/a&gt; tıklayınız.&lt;/p&gt;
&lt;p&gt;Axis 2’yi binary dosyasını &lt;a href="http://ws.apache.org/axis2/download/1_4/download.cgi"&gt;bu
linkten&lt;/a&gt;
indirdikten sonra kurmaya başlayabiliriz. Axis’in kurulum kısmı biraz
tarif modunda olacak ama elimden geldiğince her adımı nedenini detaylı
anlatmaya çalışacağım.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1-)&lt;/strong&gt; Binary dosyasını istediğiniz herhangi bir dizine açtıktan sonra
Eclipse IDE’sini açıyoruz. Menüden sırasıyla &lt;em&gt;Window -&amp;gt; Preferences&lt;/em&gt;
seçeneğini tıklıyoruz. Açılan menüden Web Services’dan Axis2 Prefences
seçeneğini seçiyoruz. Karşımıza aşağıdaki resimdeki gibi bir ekran
gelecektir. Axis2’nin kurulu olduğu dizini seçiyoruz. Böylelikle
Eclipse’e axis2’yi tanıtmış oluyoruz.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Step
1" class="aligncenter
.size-full wp-image-173" height="536" src="http://burakisikli.files.wordpress.com/2009/07/swb_1.png" title="Step 1" width="626" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2-)&lt;/strong&gt; İkinci adımımız dinamik bir web projesi oluşturmaktır. &lt;em&gt;File
&amp;gt; New &amp;gt; Project&lt;/em&gt; seçeneğinden web bölmesinin altında &lt;em&gt;Dynamic Web
Project&lt;/em&gt; seçiyoruz. Proje için bir isim veriyoruz. Biz örneğimizde
WebService adını kullanacağınız.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Step
2" class="aligncenter
.size-full wp-image-174" height="500" src="http://burakisikli.files.wordpress.com/2009/07/swb_2.png" title="Step 2" width="500" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Step
2" class="aligncenter
.size-full wp-image-175" height="616" src="http://burakisikli.files.wordpress.com/2009/07/3.jpg" title="Step 2" width="525" /&gt;&lt;/p&gt;
&lt;p&gt;Burada dikkat edilmesi gereken nokta Configuration kısmıdır. Tomcat’in
seçeneğinin yanında bulunan Modify butonuna tıkladıktan sonra aşağıdaki
gibi bir menü açılacaktır. Burada “Axis2 Web Services” seçeneğinin
işaretli olmasına dikkat etmemiz gerekiyor.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Step
2" class="aligncenter
.size-full wp-image-176" height="518" src="http://burakisikli.files.wordpress.com/2009/07/4.jpg" title="Step 2" width="617" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3-)&lt;/strong&gt; Artık web servisimize ait sınıflarımızı oluşturmaya
başlayabiliriz. edu.burakkk.webservice.example paket isimli MyService
adında bir  sınıf oluşturuyoruz.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Step
3" class="size-full
.wp-image-177 aligncenter" height="630" src="http://burakisikli.files.wordpress.com/2009/07/5.jpg" title="Step 3" width="540" /&gt;&lt;/p&gt;
&lt;p&gt;Sınıfımıza aşağıdaki kodu yazıyoruz:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SumService.java&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
\[sourcecode language="java"\]

&lt;/pre&gt;
package edu.burakkk.webservice.example;

/\*\*  
\* Web Service Example  
\* Sum of two numbers  
\*  
\*@version 1.0 Release 1  
\*@author Burak ISIKLI  
\*  
\*\*/

public class SumService {  
public String sum(Integer a, Integer b) {  
return a + " + " + b + " = " + (a + b);  
}  
}  
\[/sourcecode\]

**4-)** SumService sınıfımıza sağ tıklıyoruz. Web Services -&amp;gt; Create
Web Service seçeneğine tıklıyoruz. Ekrana gelen menüde Web Service
runtime seçeniğinin Axis 2 olmasını sağlıyoruz. Bunun için yazının
üstüne tıklayarak Axis 2 seçiyoruz.

![Step
4](http://burakisikli.files.wordpress.com/2009/07/6.jpg "Step 4"){.aligncenter
.size-full .wp-image-178 width="701" height="705"}

![Step
4](http://burakisikli.files.wordpress.com/2009/07/7.jpg "Step 4"){.aligncenter
.size-full .wp-image-179 width="564" height="503"}

![Step
4](http://burakisikli.files.wordpress.com/2009/07/8.jpg "Step 4"){.aligncenter
.size-full .wp-image-180 width="705" height="747"}

![Last
Step](http://burakisikli.files.wordpress.com/2009/07/9.jpg "Last Step"){.aligncenter
.size-full .wp-image-181 width="705" height="747"}

**5-)** Start Server butonuna bastıktan sonra web servisimiz yaratılmış
ve başlatılmış olacaktır. Web servis’e ulaşmak için
*&lt;http://localhost:8080/WebService/services/SumService/sum?a=6&amp;b=76&gt;*
yazdığımız takdirde aşağıdaki gibi bir ekran karşımıza gelecektir.

![Result](http://burakisikli.files.wordpress.com/2009/07/10.jpg "Result"){.size-full
.wp-image-182 .alignnone width="285" height="105"}

Web servise ulaştırken, a ve b değişkenlerini yazdıktan sonra
toplayacağımız sayıları yazıyoruz. Biz örnek olarak a’ya 6, b’ye de 76
değerini verdik. Ayrıca Axis 2’nin oluşturduğu wsdl dosyasına
&lt;http://localhost:8080/WebService/services/SumService?wsdl&gt; linkinden
ulaşabiliriz. Şimdilik bu basit örnek bize yol göstermek web servisin ne
olduğunu anlamak içindi. Gelecek web serviste daha detaylı bir örnekle
daha da anlaşılır hale gelecektir.

**Kaynaklar:**

&lt;http://en.wikipedia.org/wiki/Apache_Axis2&gt;

&lt;http://www.ibm.com/developerworks/webservices/library/ws-webaxis1/&gt;

&lt;http://www.javaworld.com/javaworld/jw-09-2003/jw-0912-fop.html?page=2&gt;

&lt;http://omeryurduseven.blogspot.com/2008/07/web-service-sample-in-eclipse-using.html&gt;

&lt;http://javamanyaklari.com/2007/06/axis-ile-stub-olusturarak-web-servis-kullanimi.jsp&gt;

&lt;http://eclipse.dzone.com/articles/web-services-development-with-&gt;</summary><category term="Axis"></category><category term="Axis 2"></category><category term="Eclipse"></category><category term="Servis"></category><category term="SOA"></category><category term="SOAP"></category><category term="Web"></category><category term="Web Service"></category><category term="Web Servis"></category><category term="WSDL"></category></entry></feed>